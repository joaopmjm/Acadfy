"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const util = require("util");
const asyncMiddleware = (functions) => {
    let fns = functions;
    // Ensure input as an array
    if (!util.isArray(fns)) {
        fns = [fns];
    }
    // Map the array of filters and controllers with a Promise wrapper for express error handling
    return fns.map(fn => (req, res, next) => {
        if (!util.isFunction(fn)) {
            let msg = 'Async middleware cannot wrap something that is not a function, got ' + typeof fn + '';
            if (util.isString(fn)) {
                msg = `${msg}: "${fn}"`;
            }
            throw new Error(msg);
        }
        try {
            return Promise.resolve(fn(req, res, next)).catch(next);
        }
        catch (error) {
            next(error);
        }
    });
};
exports.default = asyncMiddleware;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXN5bmMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9saWIvc2VydmVyL21pZGRsZXdhcmVzL2FzeW5jLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsNkJBQTZCO0FBRzdCLE1BQU0sZUFBZSxHQUFHLENBQUMsU0FBZ0MsRUFBRSxFQUFFO0lBQzNELElBQUksR0FBRyxHQUFHLFNBQVMsQ0FBQztJQUVwQiwyQkFBMkI7SUFDM0IsRUFBRSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUN2QixHQUFHLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQztJQUNkLENBQUM7SUFDRCw2RkFBNkY7SUFDN0YsTUFBTSxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLEdBQVksRUFBRSxHQUFhLEVBQUUsSUFBUyxFQUFFLEVBQUU7UUFDOUQsRUFBRSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsVUFBVSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQztZQUN6QixJQUFJLEdBQUcsR0FBRyxxRUFBcUUsR0FBRyxPQUFPLEVBQUUsR0FBRyxFQUFFLENBQUM7WUFDakcsRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUM7Z0JBQ3RCLEdBQUcsR0FBRyxHQUFHLEdBQUcsTUFBTSxFQUFFLEdBQUcsQ0FBQztZQUMxQixDQUFDO1lBQ0QsTUFBTSxJQUFJLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBQztRQUN2QixDQUFDO1FBQ0QsSUFBSSxDQUFDO1lBQ0gsTUFBTSxDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUMsRUFBRSxDQUFDLEdBQUcsRUFBRSxHQUFHLEVBQUUsSUFBSSxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDekQsQ0FBQztRQUFDLEtBQUssQ0FBQyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUM7WUFDZixJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7UUFDZCxDQUFDO0lBQ0gsQ0FBQyxDQUFDLENBQUM7QUFDTCxDQUFDLENBQUM7QUFFRixrQkFBZSxlQUFlLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyB1dGlsIGZyb20gJ3V0aWwnO1xuaW1wb3J0IHsgUmVxdWVzdCwgUmVzcG9uc2UgfSBmcm9tICdleHByZXNzJztcblxuY29uc3QgYXN5bmNNaWRkbGV3YXJlID0gKGZ1bmN0aW9uczogRnVuY3Rpb24gfCBGdW5jdGlvbltdKSA9PiB7XG4gIGxldCBmbnMgPSBmdW5jdGlvbnM7XG4gIFxuICAvLyBFbnN1cmUgaW5wdXQgYXMgYW4gYXJyYXlcbiAgaWYgKCF1dGlsLmlzQXJyYXkoZm5zKSkge1xuICAgIGZucyA9IFtmbnNdO1xuICB9XG4gIC8vIE1hcCB0aGUgYXJyYXkgb2YgZmlsdGVycyBhbmQgY29udHJvbGxlcnMgd2l0aCBhIFByb21pc2Ugd3JhcHBlciBmb3IgZXhwcmVzcyBlcnJvciBoYW5kbGluZ1xuICByZXR1cm4gZm5zLm1hcChmbiA9PiAocmVxOiBSZXF1ZXN0LCByZXM6IFJlc3BvbnNlLCBuZXh0OiBhbnkpID0+IHtcbiAgICBpZiAoIXV0aWwuaXNGdW5jdGlvbihmbikpIHtcbiAgICAgIGxldCBtc2cgPSAnQXN5bmMgbWlkZGxld2FyZSBjYW5ub3Qgd3JhcCBzb21ldGhpbmcgdGhhdCBpcyBub3QgYSBmdW5jdGlvbiwgZ290ICcgKyB0eXBlb2YgZm4gKyAnJztcbiAgICAgIGlmICh1dGlsLmlzU3RyaW5nKGZuKSkge1xuICAgICAgICBtc2cgPSBgJHttc2d9OiBcIiR7Zm59XCJgO1xuICAgICAgfVxuICAgICAgdGhyb3cgbmV3IEVycm9yKG1zZyk7XG4gICAgfVxuICAgIHRyeSB7XG4gICAgICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKGZuKHJlcSwgcmVzLCBuZXh0KSkuY2F0Y2gobmV4dCk7XG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgIG5leHQoZXJyb3IpO1xuICAgIH1cbiAgfSk7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBhc3luY01pZGRsZXdhcmU7XG4iXX0=